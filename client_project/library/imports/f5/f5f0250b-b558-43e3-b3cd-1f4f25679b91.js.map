{"version":3,"sources":["assets\\scripts\\wsNet.js"],"names":["Global","require","cc","Class","Component","swConnect","ws","log","readyState","WebSocket","CONNECTING","OPEN","wsAddr","onopen","e","onmessage","data","onerror","onclose","sendwsmessage","CLOSED","CLOSING","send"],"mappings":";;;;;;AAAA;;;AAIA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEAC,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;;AAGL;;;;;;;AAOAC,EAAAA,SAAS,EAAE,qBAAU;AACjB,QAAIL,MAAM,CAACM,EAAP,IAAa,IAAjB,EAAuB;AACnBJ,MAAAA,EAAE,CAACK,GAAH,CAAO,cAAP,EAAuBP,MAAM,CAACM,EAAP,CAAUE,UAAjC;;AACA,UAAIR,MAAM,CAACM,EAAP,CAAUE,UAAV,IAAwBC,SAAS,CAACC,UAAlC,IAAgDV,MAAM,CAACM,EAAP,CAAUE,UAAV,IAAwBC,SAAS,CAACE,IAAtF,EAA4F;AAAE;AAC1F;AACH;AACJ;;AAEDT,IAAAA,EAAE,CAACK,GAAH,CAAO,QAAP,EAAiBP,MAAM,CAACY,MAAxB,EAAgCZ,MAAM,CAACM,EAAP,IAAa,IAA7C;AACAA,IAAAA,EAAE,GAAG,IAAIG,SAAJ,CAAcT,MAAM,CAACY,MAArB,CAAL;;AACAN,IAAAA,EAAE,CAACO,MAAH,GAAY,UAASC,CAAT,EAAY;AACpBZ,MAAAA,EAAE,CAACK,GAAH,CAAO,WAAP,EAAoBD,EAAE,CAACE,UAAvB;AACH,KAFD;;AAIAF,IAAAA,EAAE,CAACS,SAAH,GAAe,UAASD,CAAT,EAAY;AACvBZ,MAAAA,EAAE,CAACK,GAAH,CAAO,cAAP,EAAuBO,CAAC,CAACE,IAAzB;AACH,KAFD;;AAIAV,IAAAA,EAAE,CAACW,OAAH,GAAa,UAAUH,CAAV,EAAa;AACtBZ,MAAAA,EAAE,CAACK,GAAH,CAAO,YAAP,EAAqBD,EAAE,CAACE,UAAxB;AACH,KAFD;;AAIAF,IAAAA,EAAE,CAACY,OAAH,GAAa,UAAUJ,CAAV,EAAa;AACtBZ,MAAAA,EAAE,CAACK,GAAH,CAAO,YAAP,EAAqBD,EAAE,CAACE,UAAxB;AACH,KAFD;;AAIAN,IAAAA,EAAE,CAACK,GAAH,CAAO,yBAAP,EAAkCD,EAAE,CAACE,UAArC;AACAR,IAAAA,MAAM,CAACM,EAAP,GAAYA,EAAZ;AACH,GAtCI;;AAwCL;;;;AAIAa,EAAAA,aAAa,EAAE,uBAASH,IAAT,EAAc;AAEzB,QAAIhB,MAAM,CAACM,EAAP,IAAa,IAAjB,EAAuB;AACnB;AACH;;AAED,QAAIN,MAAM,CAACM,EAAP,IAAa,IAAjB,EAAuB;AACnB,UAAIN,MAAM,CAACM,EAAP,CAAUE,UAAV,IAAwBC,SAAS,CAACW,MAAlC,IAA4CpB,MAAM,CAACM,EAAP,CAAUE,UAAV,IAAwBC,SAAS,CAACY,OAAlF,EAA2F;AAAE;AACzF;AACH;AACJ;;AAEDnB,IAAAA,EAAE,CAACK,GAAH,CAAO,mBAAP;AACAP,IAAAA,MAAM,CAACM,EAAP,CAAUgB,IAAV,CAAeN,IAAf;AACH;AA1DI,CAAT","sourceRoot":"/","sourcesContent":["/**\r\n * websocket \r\n */\r\n\r\nlet Global = require(\"common\")\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    /*\r\n    readyState:\r\n        CONNECTING 0\r\n        OPEN       1\r\n        CLOSING    2\r\n        CLOSED     3\r\n    */\r\n    swConnect: function(){\r\n        if (Global.ws != null) {\r\n            cc.log(\"readyState: \", Global.ws.readyState)\r\n            if (Global.ws.readyState == WebSocket.CONNECTING || Global.ws.readyState == WebSocket.OPEN) { //已经连上就不必再连\r\n                return\r\n            }\r\n        }\r\n\r\n        cc.log(\"addr: \", Global.wsAddr, Global.ws == null)\r\n        ws = new WebSocket(Global.wsAddr);\r\n        ws.onopen = function(e) {\r\n            cc.log(\"ws open: \", ws.readyState)\r\n        }\r\n\r\n        ws.onmessage = function(e) {\r\n            cc.log(\"ws message: \", e.data)\r\n        }\r\n\r\n        ws.onerror = function (e) {\r\n            cc.log(\"ws error: \", ws.readyState)\r\n        }\r\n\r\n        ws.onclose = function (e) {\r\n            cc.log(\"ws close: \", ws.readyState)\r\n        }\r\n\r\n        cc.log(\"global ws init, state: \", ws.readyState)\r\n        Global.ws = ws\r\n    },\r\n\r\n    /**\r\n     * \r\n     * @param {*} data  具体数据, 1：长度，2：是否广播，3：... 具体消息数据\r\n     */\r\n    sendwsmessage: function(data){\r\n        \r\n        if (Global.ws == null) {\r\n            return\r\n        }\r\n\r\n        if (Global.ws != null) {\r\n            if (Global.ws.readyState == WebSocket.CLOSED || Global.ws.readyState == WebSocket.CLOSING) { //正在断开或者已经断开，则不能发送消息\r\n                return\r\n            }\r\n        }\r\n\r\n        cc.log(\"ws sendwsmessage.\")\r\n        Global.ws.send(data)\r\n    }\r\n})"]}