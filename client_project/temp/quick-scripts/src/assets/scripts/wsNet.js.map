{"version":3,"sources":["assets\\scripts\\wsNet.js"],"names":["Global","require","cc","Class","checkSocketState","ws","swConnect","log","readyState","WebSocket","CONNECTING","OPEN","wsAddr","onopen","e","onmessage","data","Uint32Array","msgid","MID_login","MID_logout","MID_move","onerror","onclose","sendwsmessage","CLOSED","CLOSING","send"],"mappings":"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","sourceRoot":"/","sourcesContent":["/**\r\n * websocket \r\n */\r\n\r\nlet Global = require(\"common\")\r\n//let Player = require(\"Player\")\r\n\r\ncc.Class({\r\n    //extends: cc.Component,\r\n\r\n    /*\r\n    readyState:\r\n        CONNECTING 0\r\n        OPEN       1\r\n        CLOSING    2\r\n        CLOSED     3\r\n    */\r\n   \r\n    checkSocketState: function(){\r\n        if (Global.ws == null){\r\n            this.swConnect()\r\n        }\r\n    },  \r\n\r\n    swConnect: function(){\r\n        if (Global.ws != null) {\r\n            cc.log(\"readyState: \", Global.ws.readyState)\r\n            if (Global.ws.readyState == WebSocket.CONNECTING || Global.ws.readyState == WebSocket.OPEN) { //已经连上就不必再连\r\n                return\r\n            }\r\n        }\r\n\r\n        cc.log(\"addr: \", Global.wsAddr, Global.ws == null)\r\n        var ws = new WebSocket(Global.wsAddr);\r\n        ws.onopen = function(e) {\r\n            cc.log(\"ws open: \", ws.readyState)\r\n        }\r\n\r\n        ws.onmessage = function(e) {\r\n            var data = new Uint32Array(e.data)\r\n            var msgid = data[0] \r\n            switch (msgid) {\r\n                case Global.MID_login:\r\n                    cc.log(\"ws message MID_login: \")\r\n                case Global.MID_logout:\r\n                    cc.log(\"ws message MID_logout: \")\r\n                case Global.MID_move:\r\n                    cc.log(\"ws message MID_move: \")\r\n                default:\r\n                    cc.log(\"未知 消息id: \", msgid)\r\n            }\r\n        }\r\n\r\n        ws.onerror = function (e) {\r\n            cc.log(\"ws error: \", ws.readyState)\r\n            Global.ws = null\r\n        }\r\n\r\n        ws.onclose = function (e) {\r\n            cc.log(\"ws close: \", ws.readyState)\r\n            //Player.sendPlayerPos()\r\n            Global.ws = null\r\n        }\r\n\r\n        cc.log(\"global ws init, state: \", ws.readyState)\r\n        Global.ws = ws\r\n    },\r\n\r\n    /**\r\n     * \r\n     * @param {*} data  具体数据, 1：长度，2：是否广播，3：... 具体消息数据\r\n     */\r\n    sendwsmessage: function(data){\r\n        \r\n        if (Global.ws == null) {\r\n            this.checkSocketState()\r\n        }\r\n\r\n        if (Global.ws != null) {\r\n            if (Global.ws.readyState == WebSocket.CLOSED || Global.ws.readyState == WebSocket.CLOSING) { //正在断开或者已经断开，则不能发送消息\r\n                this.checkSocketState()\r\n            }\r\n        }\r\n\r\n        cc.log(\"ws sendwsmessage.\")\r\n        Global.ws.send(data)\r\n    }\r\n})"]}