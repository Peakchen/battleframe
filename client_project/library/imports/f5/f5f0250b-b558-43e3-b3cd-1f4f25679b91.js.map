{"version":3,"sources":["assets\\scripts\\wsNet.js"],"names":["Global","require","HeartCheck","timeout","timeoutObj","serverTimeoutObj","disconnectioned","reconnectTimeoutobj","reset","clearTimeout","startHeartBeat","self","setTimeout","cc","log","ws","buff","ArrayBuffer","data","Uint32Array","MID_HeartBeat","send","close","hasDisconnected","stopReconnectTimer","MessageStateFunc","onlogin","LoginSucc","mySessionId","onlogout","key","toString","DelPlayerIds","push","PlayerSessionMap","onmove","nodex","nodey","playerProp","sessionId","has","set","NewplayerMap","newPlayerIds","onBump","starProp","newStarPos","newStarKey","onHeartBeat","msgid","onStarBorn","onGM","Online4Other","onRegister","RegisterSucc","Class","CanSendMsg","readyState","WebSocket","CONNECTING","OPEN","swConnect","wsAddr","onopen","e","onmessage","MID_login","MID_logout","MID_move","MID_Bump","MID_StarBorn","MID_GM","MID_Online4Other","MID_Register","onerror","onclose","sendwsmessage","CLOSED","CLOSING"],"mappings":";;;;;;AAAA;;;AAIA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB,EAEA;;;AACA,IAAIC,UAAU,GAAG;AACbC,EAAAA,OAAO,EAAE,KADI;AACG;AAChBC,EAAAA,UAAU,EAAE,IAFC;AAGbC,EAAAA,gBAAgB,EAAE,IAHL;AAIbC,EAAAA,eAAe,EAAE,KAJJ;AAKbC,EAAAA,mBAAmB,EAAE,IALR;AAObC,EAAAA,KAAK,EAAE,iBAAW;AACdC,IAAAA,YAAY,CAAC,KAAKL,UAAN,CAAZ;AACAK,IAAAA,YAAY,CAAC,KAAKJ,gBAAN,CAAZ;AACA,WAAO,IAAP;AACH,GAXY;AAabK,EAAAA,cAAc,EAAE,0BAAW;AACvB,QAAIC,IAAI,GAAG,IAAX;AACA,SAAKP,UAAL,GAAkBQ,UAAU,CAAC,YAAW;AACpC;AACAC,MAAAA,EAAE,CAACC,GAAH,CAAO,oBAAP;;AACA,UAAId,MAAM,CAACe,EAAP,IAAa,IAAjB,EAAuB;AACnB;AACH;;AAED,UAAIC,IAAI,GAAG,IAAIC,WAAJ,CAAgB,EAAhB,CAAX;AACA,UAAIC,IAAI,GAAG,IAAIC,WAAJ,CAAgBH,IAAhB,CAAX;AAEAE,MAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUlB,MAAM,CAACoB,aAAjB,CAVoC,CAUL;;AAC/BF,MAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAV,CAXoC,CAWxB;;AACZA,MAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAV,CAZoC,CAYxB;;AAEZlB,MAAAA,MAAM,CAACe,EAAP,CAAUM,IAAV,CAAeH,IAAf;AACAP,MAAAA,IAAI,CAACN,gBAAL,GAAwBO,UAAU,CAAC,YAAW;AAAE;AAC5CC,QAAAA,EAAE,CAACC,GAAH,CAAO,qBAAP;;AACA,YAAId,MAAM,CAACe,EAAP,IAAa,IAAjB,EAAuB;AACnB;AACH;;AACDf,QAAAA,MAAM,CAACe,EAAP,CAAUO,KAAV;AACAX,QAAAA,IAAI,CAACL,eAAL,GAAuB,IAAvB;AACH,OAPiC,EAO/BK,IAAI,CAACR,OAP0B,CAAlC;AAQH,KAvB2B,EAuBzB,KAAKA,OAvBoB,CAA5B;AAwBH,GAvCY;AAyCboB,EAAAA,eAAe,EAAE,2BAAU;AACvB,WAAO,KAAKjB,eAAZ;AACH,GA3CY;AA6CbkB,EAAAA,kBAAkB,EAAE,8BAAU;AAC1B;AACAf,IAAAA,YAAY,CAAC,KAAKF,mBAAN,CAAZ;AACH;AAhDY,CAAjB;AAmDA;;;;AAGA,IAAIkB,gBAAgB,GAAG;AACnB;;;;;;;;;;AAUAC,EAAAA,OAAO,EAAE,iBAASR,IAAT,EAAe;AACpBL,IAAAA,EAAE,CAACC,GAAH,CAAO,wBAAP,EAAiCI,IAAI,CAAC,CAAD,CAArC,EAA0CA,IAAI,CAAC,CAAD,CAA9C;AACAlB,IAAAA,MAAM,CAAC2B,SAAP,GAAmBT,IAAI,CAAC,CAAD,CAAvB;;AACA,QAAIA,IAAI,CAAC,CAAD,CAAJ,IAAW,CAAf,EAAkB;AACdlB,MAAAA,MAAM,CAAC4B,WAAP,GAAqBV,IAAI,CAAC,CAAD,CAAzB;AACH,KALmB,CAMpB;;AACH,GAlBkB;AAoBnBW,EAAAA,QAAQ,EAAE,kBAASX,IAAT,EAAe;AACrB,QAAIY,GAAG,GAAGZ,IAAI,CAAC,CAAD,CAAJ,CAAQa,QAAR,EAAV;AACAlB,IAAAA,EAAE,CAACC,GAAH,CAAO,oCAAP,EAA6CgB,GAA7C;AACA9B,IAAAA,MAAM,CAACgC,YAAP,CAAoBC,IAApB,CAAyBH,GAAzB;AACA9B,IAAAA,MAAM,CAACkC,gBAAP,WAA+BJ,GAA/B;AACH,GAzBkB;AA2BnBK,EAAAA,MAAM,EAAE,gBAASjB,IAAT,EAAe;AACnB;AACA,QAAIY,GAAG,GAAGZ,IAAI,CAAC,CAAD,CAAJ,CAAQa,QAAR,EAAV;AACA,QAAIK,KAAK,GAAGlB,IAAI,CAAC,CAAD,CAAhB;AACA,QAAImB,KAAK,GAAGnB,IAAI,CAAC,CAAD,CAAhB;;AACA,QAAIA,IAAI,CAAC,CAAD,CAAJ,IAAW,CAAf,EAAiB;AACbkB,MAAAA,KAAK,GAAG,IAAIA,KAAZ;AACH;;AACD,QAAIlB,IAAI,CAAC,CAAD,CAAJ,IAAW,CAAf,EAAiB;AACbmB,MAAAA,KAAK,GAAG,IAAIA,KAAZ;AACH;;AACD,QAAIC,UAAU,GAAG;AACbC,MAAAA,SAAS,EAAErB,IAAI,CAAC,CAAD,CADF;AAEbkB,MAAAA,KAAK,EAAEA,KAFM;AAGbC,MAAAA,KAAK,EAAEA;AAHM,KAAjB;;AAKA,QAAIrC,MAAM,CAACkC,gBAAP,CAAwBM,GAAxB,CAA4BV,GAA5B,KAAoC,KAAxC,EAA+C;AAC3C9B,MAAAA,MAAM,CAACkC,gBAAP,CAAwBO,GAAxB,CAA4BX,GAA5B,EAAiCQ,UAAjC;AACH;;AACDtC,IAAAA,MAAM,CAAC0C,YAAP,CAAoBD,GAApB,CAAwBX,GAAxB,EAA6BQ,UAA7B;AACAtC,IAAAA,MAAM,CAAC2C,YAAP,CAAoBV,IAApB,CAAyBH,GAAzB,EApBmB,CAqBnB;AACH,GAjDkB;AAmDnBc,EAAAA,MAAM,EAAE,gBAAU1B,IAAV,EAAgB;AACpBL,IAAAA,EAAE,CAACC,GAAH,CAAO,uBAAP,EAAgCI,IAAI,CAAC,CAAD,CAApC,EAAyCA,IAAI,CAAC,CAAD,CAA7C,EAAkDA,IAAI,CAAC,CAAD,CAAtD,EAA2DA,IAAI,CAAC,CAAD,CAA/D,EAAoEA,IAAI,CAAC,CAAD,CAAxE,EAA6EA,IAAI,CAAC,CAAD,CAAjF;AACA;;;;;;;;;;AAUA,QAAIA,IAAI,CAAC,CAAD,CAAJ,IAAW,CAAf,EAAiB;AAAE;AACfL,MAAAA,EAAE,CAACC,GAAH,CAAO,+BAAP;AACA;AACH;;AAED,QAAIsB,KAAK,GAAGlB,IAAI,CAAC,CAAD,CAAhB;AACA,QAAImB,KAAK,GAAGnB,IAAI,CAAC,CAAD,CAAhB;;AACA,QAAIA,IAAI,CAAC,CAAD,CAAJ,IAAW,CAAf,EAAiB;AACbkB,MAAAA,KAAK,GAAG,IAAIA,KAAZ;AACH;;AACD,QAAIlB,IAAI,CAAC,CAAD,CAAJ,IAAW,CAAf,EAAiB;AACbmB,MAAAA,KAAK,GAAG,IAAIA,KAAZ;AACH;;AACD,QAAIQ,QAAQ,GAAG;AACXT,MAAAA,KAAK,EAAEA,KADI;AAEXC,MAAAA,KAAK,EAAEA;AAFI,KAAf;AAIArC,IAAAA,MAAM,CAAC8C,UAAP,CAAkBL,GAAlB,CAAsBzC,MAAM,CAAC+C,UAA7B,EAAyCF,QAAzC;AACH,GAjFkB;AAmFnBG,EAAAA,WAAW,EAAE,qBAAS9B,IAAT,EAAc;AACvBL,IAAAA,EAAE,CAACC,GAAH,CAAO,4BAAP,EAAqCmC,KAArC;AACH,GArFkB;AAuFnBC,EAAAA,UAAU,EAAE,oBAAShC,IAAT,EAAe;AACvBL,IAAAA,EAAE,CAACC,GAAH,CAAO,2BAAP,EAAoCI,IAAI,CAAC,CAAD,CAAxC,EAA6CA,IAAI,CAAC,CAAD,CAAjD,EAAsDA,IAAI,CAAC,CAAD,CAA1D,EAA+DA,IAAI,CAAC,CAAD,CAAnE;AACA;;;;;;;;;AAQA,QAAIkB,KAAK,GAAGlB,IAAI,CAAC,CAAD,CAAhB;AACA,QAAImB,KAAK,GAAGnB,IAAI,CAAC,CAAD,CAAhB;;AACA,QAAIA,IAAI,CAAC,CAAD,CAAJ,IAAW,CAAf,EAAiB;AACbkB,MAAAA,KAAK,GAAG,IAAIA,KAAZ;AACH;;AACD,QAAIlB,IAAI,CAAC,CAAD,CAAJ,IAAW,CAAf,EAAiB;AACbmB,MAAAA,KAAK,GAAG,IAAIA,KAAZ;AACH;;AACD,QAAIQ,QAAQ,GAAG;AACXT,MAAAA,KAAK,EAAEA,KADI;AAEXC,MAAAA,KAAK,EAAEA;AAFI,KAAf;AAIArC,IAAAA,MAAM,CAAC8C,UAAP,CAAkBL,GAAlB,CAAsBzC,MAAM,CAAC+C,UAA7B,EAAyCF,QAAzC;AACH,GA9GkB;AAgHnBM,EAAAA,IAAI,EAAE,cAASjC,IAAT,EAAe;AACjBL,IAAAA,EAAE,CAACC,GAAH,CAAO,sBAAP;AACH,GAlHkB;AAoHnBsC,EAAAA,YAAY,EAAE,sBAASlC,IAAT,EAAe;AACzBL,IAAAA,EAAE,CAACC,GAAH,CAAO,+BAAP,EAAwCI,IAAI,CAAC,CAAD,CAA5C,EAAiDA,IAAI,CAAC,CAAD,CAArD,EAA0DA,IAAI,CAAC,CAAD,CAA9D,EAAmEA,IAAI,CAAC,CAAD,CAAvE,EAA4EA,IAAI,CAAC,CAAD,CAAhF,EAAqFA,IAAI,CAAC,CAAD,CAAzF;AACA,QAAIY,GAAG,GAAGZ,IAAI,CAAC,CAAD,CAAJ,CAAQa,QAAR,EAAV;AACA,QAAIK,KAAK,GAAGlB,IAAI,CAAC,CAAD,CAAhB;AACA,QAAImB,KAAK,GAAGnB,IAAI,CAAC,CAAD,CAAhB;;AACA,QAAIA,IAAI,CAAC,CAAD,CAAJ,IAAW,CAAf,EAAiB;AACbkB,MAAAA,KAAK,GAAG,IAAIA,KAAZ;AACH;;AACD,QAAIlB,IAAI,CAAC,CAAD,CAAJ,IAAW,CAAf,EAAiB;AACbmB,MAAAA,KAAK,GAAG,IAAIA,KAAZ;AACH;;AACD,QAAIC,UAAU,GAAG;AACbC,MAAAA,SAAS,EAAErB,IAAI,CAAC,CAAD,CADF;AAEbkB,MAAAA,KAAK,EAAEA,KAFM;AAGbC,MAAAA,KAAK,EAAEA;AAHM,KAAjB;;AAKA,QAAIrC,MAAM,CAACkC,gBAAP,CAAwBM,GAAxB,CAA4BV,GAA5B,KAAoC,KAAxC,EAA+C;AAC3C9B,MAAAA,MAAM,CAACkC,gBAAP,CAAwBO,GAAxB,CAA4BX,GAA5B,EAAiCQ,UAAjC;AACH;;AACDtC,IAAAA,MAAM,CAAC0C,YAAP,CAAoBD,GAApB,CAAwBX,GAAxB,EAA6BQ,UAA7B;AACAtC,IAAAA,MAAM,CAAC2C,YAAP,CAAoBV,IAApB,CAAyBH,GAAzB;AACH,GAzIkB;AA2InBuB,EAAAA,UAAU,EAAE,oBAASnC,IAAT,EAAc;AACtBL,IAAAA,EAAE,CAACC,GAAH,CAAO,2BAAP,EAAoCI,IAAI,CAAC,CAAD,CAAxC;AACAlB,IAAAA,MAAM,CAACsD,YAAP,GAAsBpC,IAAI,CAAC,CAAD,CAA1B;AACH;AA9IkB,CAAvB;AAiJAL,EAAE,CAAC0C,KAAH,CAAS;AACL;;AAEA;;;;;;;AAQAC,EAAAA,UAAU,EAAE,sBAAU;AAClB,QAAIxD,MAAM,CAACe,EAAP,IAAa,IAAjB,EAAsB;AAClB,aAAO,KAAP;AACH;;AAED,WAAQf,MAAM,CAACe,EAAP,CAAU0C,UAAV,IAAwBC,SAAS,CAACC,UAAlC,IAAgD3D,MAAM,CAACe,EAAP,CAAU0C,UAAV,IAAwBC,SAAS,CAACE,IAA1F;AACH,GAjBI;AAmBLC,EAAAA,SAAS,EAAE,qBAAU;AACjB,QAAI7D,MAAM,CAACe,EAAP,IAAa,IAAjB,EAAuB;AACnB;AACA;AACA,UAAIf,MAAM,CAACe,EAAP,CAAU0C,UAAV,IAAwBC,SAAS,CAACC,UAAlC,IAAgD3D,MAAM,CAACe,EAAP,CAAU0C,UAAV,IAAwBC,SAAS,CAACE,IAAtF,EAA4F;AAAE;AAC1F;AACH;AACJ;;AAED,QAAIjD,IAAI,GAAG,IAAX;AACAE,IAAAA,EAAE,CAACC,GAAH,CAAO,QAAP,EAAiBd,MAAM,CAAC8D,MAAxB,EAAgC9D,MAAM,CAACe,EAAP,IAAa,IAA7C;AACA,QAAIA,EAAE,GAAG,IAAI2C,SAAJ,CAAc1D,MAAM,CAAC8D,MAArB,CAAT;;AACA/C,IAAAA,EAAE,CAACgD,MAAH,GAAY,UAASC,CAAT,EAAY;AACpBnD,MAAAA,EAAE,CAACC,GAAH,CAAO,WAAP,EAAoBC,EAAE,CAAC0C,UAAvB,EADoB,CAEpB;;AACAvD,MAAAA,UAAU,CAACM,KAAX,GAAmBE,cAAnB;AACH,KAJD;;AAMAK,IAAAA,EAAE,CAACkD,SAAH,GAAe,UAASD,CAAT,EAAY;AACvB,UAAI9C,IAAI,GAAG,IAAIC,WAAJ,CAAgB6C,CAAC,CAAC9C,IAAlB,CAAX;AACA,UAAI+B,KAAK,GAAG/B,IAAI,CAAC,CAAD,CAAhB;;AACA,cAAQ+B,KAAR;AACI,aAAKjD,MAAM,CAACkE,SAAZ;AACIzC,UAAAA,gBAAgB,CAACC,OAAjB,CAAyBR,IAAzB;AACA;;AACJ,aAAKlB,MAAM,CAACmE,UAAZ;AACI1C,UAAAA,gBAAgB,CAACI,QAAjB,CAA0BX,IAA1B;AACA;;AACJ,aAAKlB,MAAM,CAACoE,QAAZ;AACI3C,UAAAA,gBAAgB,CAACU,MAAjB,CAAwBjB,IAAxB;AACA;;AACJ,aAAKlB,MAAM,CAACqE,QAAZ;AACI5C,UAAAA,gBAAgB,CAACmB,MAAjB,CAAwB1B,IAAxB;AACA;;AACJ,aAAKlB,MAAM,CAACoB,aAAZ;AACIK,UAAAA,gBAAgB,CAACuB,WAAjB,CAA6B9B,IAA7B;AACA;;AACJ,aAAKlB,MAAM,CAACsE,YAAZ;AACI7C,UAAAA,gBAAgB,CAACyB,UAAjB,CAA4BhC,IAA5B;AACA;;AACJ,aAAKlB,MAAM,CAACuE,MAAZ;AACI9C,UAAAA,gBAAgB,CAAC0B,IAAjB,CAAsBjC,IAAtB;AACA;;AACJ,aAAKlB,MAAM,CAACwE,gBAAZ;AACI/C,UAAAA,gBAAgB,CAAC2B,YAAjB,CAA8BlC,IAA9B;AACA;;AACJ,aAAKlB,MAAM,CAACyE,YAAZ;AACIhD,UAAAA,gBAAgB,CAAC4B,UAAjB,CAA4BnC,IAA5B;AACA;;AACJ;AACIL,UAAAA,EAAE,CAACC,GAAH,CAAO,WAAP,EAAoBmC,KAApB;AA7BR,OAHuB,CAmCvB;;;AACA/C,MAAAA,UAAU,CAACM,KAAX,GAAmBE,cAAnB;AACH,KArCD;;AAuCAK,IAAAA,EAAE,CAAC2D,OAAH,GAAa,UAAUV,CAAV,EAAa;AACtBnD,MAAAA,EAAE,CAACC,GAAH,CAAO,YAAP,EAAqBC,EAAE,CAAC0C,UAAxB,EADsB,CAEtB;;AACA,UAAIvD,UAAU,CAACqB,eAAX,MAAgC,KAApC,EAA2C;AACvCrB,QAAAA,UAAU,CAACsB,kBAAX;AACAtB,QAAAA,UAAU,CAACK,mBAAX,GAAiCK,UAAU,CAAC,YAAW;AACnDD,UAAAA,IAAI,CAACkD,SAAL;AACH,SAF0C,EAExC,IAFwC,CAA3C;AAGH,OALD,MAKK;AACD3D,QAAAA,UAAU,CAACsB,kBAAX;AACH;AACJ,KAXD;;AAaAT,IAAAA,EAAE,CAAC4D,OAAH,GAAa,UAAUX,CAAV,EAAa;AACtBnD,MAAAA,EAAE,CAACC,GAAH,CAAO,YAAP,EAAqBC,EAAE,CAAC0C,UAAxB,EADsB,CAEtB;;AACA,UAAIvD,UAAU,CAACqB,eAAX,MAAgC,KAApC,EAA2C;AACvCrB,QAAAA,UAAU,CAACsB,kBAAX;AACAtB,QAAAA,UAAU,CAACK,mBAAX,GAAiCK,UAAU,CAAC,YAAW;AACnDD,UAAAA,IAAI,CAACkD,SAAL;AACH,SAF0C,EAExC,IAFwC,CAA3C;AAGH,OALD,MAKK;AACD3D,QAAAA,UAAU,CAACsB,kBAAX;AACH;AACJ,KAXD;;AAaAX,IAAAA,EAAE,CAACC,GAAH,CAAO,yBAAP,EAAkCC,EAAE,CAAC0C,UAArC;AACAzD,IAAAA,MAAM,CAACe,EAAP,GAAYA,EAAZ;AACH,GAxGI;;AA0GL;;;;AAIA6D,EAAAA,aAAa,EAAE,uBAAS1D,IAAT,EAAc;AAEzB,QAAIlB,MAAM,CAACe,EAAP,IAAa,IAAjB,EAAuB;AACnB;AACH;;AAED,QAAIf,MAAM,CAACe,EAAP,IAAa,IAAjB,EAAuB;AACnB,UAAIf,MAAM,CAACe,EAAP,CAAU0C,UAAV,IAAwBC,SAAS,CAACmB,MAAlC,IAA4C7E,MAAM,CAACe,EAAP,CAAU0C,UAAV,IAAwBC,SAAS,CAACoB,OAAlF,EAA2F;AAAE;AACzF;AACH;AACJ,KAVwB,CAYzB;;;AACA9E,IAAAA,MAAM,CAACe,EAAP,CAAUM,IAAV,CAAeH,IAAf;AACH;AA5HI,CAAT","sourceRoot":"/","sourcesContent":["/**\r\n * websocket \r\n */\r\n\r\nlet Global = require(\"common\")\r\n\r\n//心跳检测\r\nvar HeartCheck = {\r\n    timeout: 60000, //60秒\r\n    timeoutObj: null,\r\n    serverTimeoutObj: null,\r\n    disconnectioned: false,\r\n    reconnectTimeoutobj: null,\r\n\r\n    reset: function() {\r\n        clearTimeout(this.timeoutObj);\r\n        clearTimeout(this.serverTimeoutObj);\r\n        return this;\r\n    },\r\n\r\n    startHeartBeat: function() {\r\n        var self = this;\r\n        this.timeoutObj = setTimeout(function() {\r\n            //这里发送一个心跳，后端收到后，返回一个心跳消息，onmessage拿到返回的心跳就说明连接正常\r\n            cc.log(\"send heart beat...\")\r\n            if (Global.ws == null) {\r\n                return\r\n            } \r\n\r\n            var buff = new ArrayBuffer(12)\r\n            var data = new Uint32Array(buff)\r\n    \r\n            data[0] = Global.MID_HeartBeat //消息ID\r\n            data[1] = 1 //消息长度\r\n            data[2] = 0 //anything 随意填充一个数\r\n\r\n            Global.ws.send(data);\r\n            self.serverTimeoutObj = setTimeout(function() { //心跳超时主动断开\r\n                cc.log(\"close connection...\")\r\n                if (Global.ws == null) {\r\n                    return\r\n                } \r\n                Global.ws.close();\r\n                self.disconnectioned = true\r\n            }, self.timeout)\r\n        }, this.timeout)\r\n    },\r\n\r\n    hasDisconnected: function(){\r\n        return this.disconnectioned\r\n    },\r\n\r\n    stopReconnectTimer: function(){\r\n        //cc.log(\"close reconnectTimeout...\")\r\n        clearTimeout(this.reconnectTimeoutobj);\r\n    }\r\n}\r\n\r\n/**\r\n * 消息回复处理\r\n */\r\nvar MessageStateFunc = {\r\n    /**\r\n     * 消息解析 \r\n     * 0: 消息id\r\n     * 1：消息长度\r\n     * 2：sessionid\r\n     * 3：nodex x坐标正负标记\r\n     * 4：nodex x坐标值\r\n     * 5：nodey y坐标正负标记\r\n     * 6：nodey y坐标值 \r\n     */\r\n    onlogin: function(data) {\r\n        cc.log(\"ws message MID_login: \", data[2], data[3])\r\n        Global.LoginSucc = data[2]\r\n        if (data[2] == 1) {\r\n            Global.mySessionId = data[3]\r\n        }\r\n        //cc.log(\"ws message MID_login: \", Global.newPlayerIds.length, key, Global.NewplayerMap.has(key))\r\n    },\r\n\r\n    onlogout: function(data) {\r\n        var key = data[2].toString()\r\n        cc.log(\"ws message MID_logout, sessionid: \", key)\r\n        Global.DelPlayerIds.push(key)\r\n        Global.PlayerSessionMap.delete(key)\r\n    },\r\n\r\n    onmove: function(data) {\r\n        //cc.log(\"ws message MID_move: \", data[1], data[2], data[3], data[4], data[5], data[6])\r\n        var key = data[2].toString()\r\n        var nodex = data[4]\r\n        var nodey = data[6]\r\n        if (data[3] == 2){\r\n            nodex = 0 - nodex\r\n        }\r\n        if (data[5] == 2){\r\n            nodey = 0 - nodey\r\n        }\r\n        var playerProp = {\r\n            sessionId: data[2],\r\n            nodex: nodex,\r\n            nodey: nodey\r\n        }\r\n        if (Global.PlayerSessionMap.has(key) == false) {\r\n            Global.PlayerSessionMap.set(key, playerProp)\r\n        }\r\n        Global.NewplayerMap.set(key, playerProp)\r\n        Global.newPlayerIds.push(key)\r\n        //cc.log(\"MID_move purple monsters: \", Global.newPlayerIds.length, key, Global.NewplayerMap.has(key))\r\n    },\r\n\r\n    onBump: function (data) {\r\n        cc.log(\"ws message MID_Bump: \", data[1], data[2], data[3], data[4], data[5], data[6])\r\n        /**\r\n         *  0: 消息ID\r\n            1：消息长度\r\n            2: 成功失败标志 (失败则只需要前三个字段)\r\n            3: 星星x坐标正负标志\r\n            4: 星星x坐标\r\n            5：星星y坐标正负标志\r\n            6：星星y坐标\r\n            */\r\n\r\n        if (data[2] == 0){ //失败\r\n            cc.log(\"ws message MID_Bump fail ... \")\r\n            return\r\n        }\r\n        \r\n        var nodex = data[4]\r\n        var nodey = data[6]\r\n        if (data[3] == 2){\r\n            nodex = 0 - nodex\r\n        }\r\n        if (data[5] == 2){\r\n            nodey = 0 - nodey\r\n        }\r\n        var starProp = {\r\n            nodex: nodex,\r\n            nodey: nodey\r\n        }\r\n        Global.newStarPos.set(Global.newStarKey, starProp)\r\n    },\r\n\r\n    onHeartBeat: function(data){\r\n        cc.log(\"ws message MID_HeartBeat: \", msgid)\r\n    },\r\n\r\n    onStarBorn: function(data) {\r\n        cc.log(\"ws message MID_StarBorn: \", data[2], data[3], data[4], data[5])\r\n        /**\r\n         *  0: 消息ID\r\n            1：消息长度\r\n            2: 星星x坐标正负标志\r\n            3: 星星x坐标\r\n            4：星星y坐标正负标志\r\n            5：星星y坐标\r\n         */\r\n        var nodex = data[3]\r\n        var nodey = data[5]\r\n        if (data[2] == 2){\r\n            nodex = 0 - nodex\r\n        }\r\n        if (data[4] == 2){\r\n            nodey = 0 - nodey\r\n        }\r\n        var starProp = {\r\n            nodex: nodex,\r\n            nodey: nodey\r\n        }\r\n        Global.newStarPos.set(Global.newStarKey, starProp)\r\n    },\r\n\r\n    onGM: function(data) {\r\n        cc.log(\"ws message MID_GM...\")\r\n    },\r\n\r\n    Online4Other: function(data) {\r\n        cc.log(\"ws message MID_Online4Other: \", data[1], data[2], data[3], data[4], data[5], data[6])\r\n        var key = data[2].toString()\r\n        var nodex = data[4]\r\n        var nodey = data[6]\r\n        if (data[3] == 2){\r\n            nodex = 0 - nodex\r\n        }\r\n        if (data[5] == 2){\r\n            nodey = 0 - nodey\r\n        }\r\n        var playerProp = {\r\n            sessionId: data[2],\r\n            nodex: nodex,\r\n            nodey: nodey\r\n        }\r\n        if (Global.PlayerSessionMap.has(key) == false) {\r\n            Global.PlayerSessionMap.set(key, playerProp)\r\n        }\r\n        Global.NewplayerMap.set(key, playerProp)\r\n        Global.newPlayerIds.push(key)\r\n    },\r\n\r\n    onRegister: function(data){\r\n        cc.log(\"ws message MID_Register: \", data[2])\r\n        Global.RegisterSucc = data[2]\r\n    }\r\n}\r\n\r\ncc.Class({\r\n    //extends: cc.Component,\r\n\r\n    /*\r\n    readyState:\r\n        CONNECTING 0\r\n        OPEN       1\r\n        CLOSING    2\r\n        CLOSED     3\r\n    */\r\n   \r\n    CanSendMsg: function(){\r\n        if (Global.ws == null){\r\n            return false\r\n        }\r\n\r\n        return (Global.ws.readyState == WebSocket.CONNECTING || Global.ws.readyState == WebSocket.OPEN)\r\n    }, \r\n\r\n    swConnect: function(){\r\n        if (Global.ws != null) {\r\n            //return\r\n            //cc.log(\"readyState: \", Global.ws.readyState)\r\n            if (Global.ws.readyState == WebSocket.CONNECTING || Global.ws.readyState == WebSocket.OPEN) { //已经连上就不必再连\r\n                return\r\n            }\r\n        }\r\n\r\n        var self = this;\r\n        cc.log(\"addr: \", Global.wsAddr, Global.ws == null)\r\n        var ws = new WebSocket(Global.wsAddr);\r\n        ws.onopen = function(e) {\r\n            cc.log(\"ws open: \", ws.readyState)\r\n            //发送心跳\r\n            HeartCheck.reset().startHeartBeat()\r\n        }\r\n\r\n        ws.onmessage = function(e) {\r\n            var data = new Uint32Array(e.data)\r\n            var msgid = data[0] \r\n            switch (msgid) {\r\n                case Global.MID_login:\r\n                    MessageStateFunc.onlogin(data)\r\n                    break;\r\n                case Global.MID_logout:\r\n                    MessageStateFunc.onlogout(data)\r\n                    break;\r\n                case Global.MID_move:\r\n                    MessageStateFunc.onmove(data)\r\n                    break;\r\n                case Global.MID_Bump:\r\n                    MessageStateFunc.onBump(data)\r\n                    break\r\n                case Global.MID_HeartBeat:\r\n                    MessageStateFunc.onHeartBeat(data)\r\n                    break\r\n                case Global.MID_StarBorn:\r\n                    MessageStateFunc.onStarBorn(data)\r\n                    break\r\n                case Global.MID_GM:\r\n                    MessageStateFunc.onGM(data)\r\n                    break\r\n                case Global.MID_Online4Other:\r\n                    MessageStateFunc.Online4Other(data)\r\n                    break\r\n                case Global.MID_Register:\r\n                    MessageStateFunc.onRegister(data)\r\n                    break\r\n                default:\r\n                    cc.log(\"未知 消息id: \", msgid)\r\n            }\r\n\r\n            //发送心跳\r\n            HeartCheck.reset().startHeartBeat()\r\n        }\r\n\r\n        ws.onerror = function (e) {\r\n            cc.log(\"ws error: \", ws.readyState)\r\n            //Global.ws = null\r\n            if (HeartCheck.hasDisconnected() == false) {\r\n                HeartCheck.stopReconnectTimer()\r\n                HeartCheck.reconnectTimeoutobj = setTimeout(function() {\r\n                    self.swConnect();\r\n                }, 1000)\r\n            }else{\r\n                HeartCheck.stopReconnectTimer()\r\n            }\r\n        }\r\n\r\n        ws.onclose = function (e) {\r\n            cc.log(\"ws close: \", ws.readyState)\r\n            //Global.ws = null\r\n            if (HeartCheck.hasDisconnected() == false) {\r\n                HeartCheck.stopReconnectTimer()\r\n                HeartCheck.reconnectTimeoutobj = setTimeout(function() {\r\n                    self.swConnect();\r\n                }, 1000)\r\n            }else{\r\n                HeartCheck.stopReconnectTimer()\r\n            }\r\n        }\r\n\r\n        cc.log(\"global ws init, state: \", ws.readyState)\r\n        Global.ws = ws\r\n    },\r\n\r\n    /**\r\n     * \r\n     * @param {*} data  具体数据, 1：长度，2：是否广播，3：... 具体消息数据\r\n     */\r\n    sendwsmessage: function(data){\r\n        \r\n        if (Global.ws == null) {\r\n            return\r\n        }\r\n\r\n        if (Global.ws != null) {\r\n            if (Global.ws.readyState == WebSocket.CLOSED || Global.ws.readyState == WebSocket.CLOSING) { //正在断开或者已经断开，则不能发送消息\r\n                return\r\n            }\r\n        }\r\n\r\n        //cc.log(\"ws sendwsmessage: \", Global.ws.readyState)\r\n        Global.ws.send(data)\r\n    }\r\n})"]}