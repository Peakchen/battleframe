{"version":3,"sources":["assets\\scripts\\Player.js"],"names":["Global","require","wsNet","cc","Class","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","type","AudioClip","oldspeed","getwsNetObj","ws","checkSocketState","setJumpAction","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","onKeyDown","event","keyCode","macro","KEY","a","accLeft","d","accRight","onKeyUp","onLoad","game","setFrameRate","FirstLogin","xSpeed","Math","random","systemEvent","on","SystemEvent","EventType","KEY_DOWN","KEY_UP","randPlayerPos","onDestroy","off","node","x","width","sendPlayerPos","msgid","log","buff","ArrayBuffer","data","Uint32Array","nodexflag","nodex","parseInt","nodeyflag","y","nodey","sendwsmessage","update","dt","MID_login","abs","MID_move"],"mappings":"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","sourceRoot":"/","sourcesContent":["let Global = require(\"common\")\nlet wsNet = require(\"wsNet\")\n\ncc.Class({\n    extends: cc.Component,\n    \n    properties: {\n        // 主角跳跃高度\n        jumpHeight: 0,\n        // 主角跳跃持续时间\n        jumpDuration: 0,\n        // 最大移动速度\n        maxMoveSpeed: 0,\n        // 加速度\n        accel: 0,\n        // 跳跃音效资源\n        jumpAudio: {\n            default: null,\n            type: cc.AudioClip\n        },\n        //\n        oldspeed: 0,\n    },\n\n    getwsNetObj: function() {\n        var ws = new wsNet();\n        ws.checkSocketState()\n        return ws\n    },\n\n    setJumpAction: function () {\n        // 跳跃上升\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\n        // 下落\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\n        // 添加一个回调函数，用于在动作结束时调用我们定义的其他方法\n        var callback = cc.callFunc(this.playJumpSound, this);\n        // 不断重复，而且每次完成落地动作后调用回调来播放声音\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\n    },\n\n    playJumpSound: function () {\n        // 调用声音引擎播放声音\n        cc.audioEngine.playEffect(this.jumpAudio, false);\n    },\n\n    onKeyDown (event) {\n        // set a flag when key pressed\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.accLeft = true;\n                break;\n            case cc.macro.KEY.d:\n                this.accRight = true;\n                break;\n        }\n    },\n\n    onKeyUp (event) {\n        // unset a flag when key released\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.accLeft = false;\n                break;\n            case cc.macro.KEY.d:\n                this.accRight = false;\n                break;\n        }\n    },\n\n    onLoad: function() {\n        cc.game.setFrameRate(100);\n        //初始化websocket\n        //this.getwsNetObj().swConnect()\n\n        Global.FirstLogin = null\n        // 初始化跳跃动作\n        //this.jumpAction = this.setJumpAction();\n        //this.node.runAction(this.jumpAction);\n        // 加速度方向开关\n        this.accLeft = false;\n        this.accRight = false;\n\n        // 主角当前水平方向速度\n        this.xSpeed = (Math.random() - 0.5) * 2 * 10;\n\n        // 初始化键盘输入监听\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);  \n        \n        //初始化小球位置\n        this.randPlayerPos()\n    },\n\n    onDestroy () {\n        // 取消键盘输入监听\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },    \n\n    //初始化随机小球所在位置，然后广播给其他人\n    randPlayerPos: function() {\n        this.node.x = this.xSpeed * (this.node.width/2)\n        this.xSpeed = 0\n        //cc.log(\"randPlayerPos player pos: \", this.node.x, this.node.y)\n    },\n\n    sendPlayerPos: function(msgid) {\n        cc.log(\"send player pos: \", msgid)\n\n        var buff = new ArrayBuffer(24)\n        var data = new Uint32Array(buff)\n\n        data[0] = msgid //消息ID\n        data[1] = 4 //消息长度\n        //data[2] = 2 //广播消息\n        var nodexflag = 1\n        var nodex = this.node.x\n        if (this.node.x < 0.0) {\n            nodexflag = 2\n        }\n        if (nodex < 0.0 ){\n            nodex = 0.0 - nodex\n        }\n\n        data[2] = nodexflag     //x坐标正负\n        data[3] = parseInt(this.node.x) //x坐标\n        var nodeyflag = 1\n        if (this.node.y < 0.0) {\n            nodeyflag = 2\n        }\n\n        var nodey = this.node.y\n        if (nodey < 0.0 ){\n            nodey = 0.0 - nodey\n        }\n\n        data[4] = nodeyflag    //y坐标正负\n        data[5] = parseInt(nodey) //y坐标\n\n        this.getwsNetObj().sendwsmessage(data)\n    },\n\n    update: function (dt) {\n        //cc.log(\"player dt: \", Global.FirstLogin)\n        if (Global.FirstLogin == null){\n            //广播所在位置，然后获取其他小球所在位置然后进行展示\n            this.sendPlayerPos(Global.MID_login)\n            Global.FirstLogin = 1\n        }\n\n        // 根据当前加速度方向每帧更新速度\n        if (this.accLeft) {\n            this.xSpeed -= this.accel * dt;\n        } else if (this.accRight) {\n            this.xSpeed += this.accel * dt;\n        }\n        // 限制主角的速度不能超过最大值\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\n            // if speed reach limit, use max speed with current direction\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\n        }\n\n        // 根据当前速度更新主角的位置\n\n        /**\n         * 超过边界则自动滚回场景内\n         */\n        if (this.node.x <= -595.0) {\n            //this.xSpeed += this.accel * dt;\n            this.xSpeed = 0\n            this.node.x = -595.0 + 20\n        }else if (this.node.x >= 595.0) {\n            //this.xSpeed -= this.accel * dt;\n            this.node.x = 595.0 - 20\n            this.xSpeed = 0\n        }else{\n            this.node.x += this.xSpeed * dt;\n        }\n\n        if (Global.ws = null) {\n            //this.sendPlayerPos(Global.MID_logout)\n        }\n\n        if (this.oldspeed != this.xSpeed){\n            this.sendPlayerPos(Global.MID_move)\n        }\n\n        this.oldspeed = this.xSpeed\n        //cc.log(\"player pos: \", this.node.x, this.node.y)\n    },\n});\n\n\n"]}