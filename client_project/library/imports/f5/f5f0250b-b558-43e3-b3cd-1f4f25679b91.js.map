{"version":3,"sources":["assets\\scripts\\wsNet.js"],"names":["Global","require","cc","Class","CanSendMsg","ws","readyState","WebSocket","CONNECTING","OPEN","swConnect","log","wsAddr","onopen","e","onmessage","data","Uint32Array","msgid","MID_login","key","toString","PlayerMap","set","MID_logout","MID_move","onerror","onclose","sendwsmessage","CLOSED","CLOSING","send"],"mappings":"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","sourceRoot":"/","sourcesContent":["/**\r\n * websocket \r\n */\r\n\r\nlet Global = require(\"common\")\r\n//let Player = require(\"Player\")\r\n\r\ncc.Class({\r\n    //extends: cc.Component,\r\n\r\n    /*\r\n    readyState:\r\n        CONNECTING 0\r\n        OPEN       1\r\n        CLOSING    2\r\n        CLOSED     3\r\n    */\r\n   \r\n    CanSendMsg: function(){\r\n        if (Global.ws == null){\r\n            return false\r\n        }\r\n\r\n        return (Global.ws.readyState == WebSocket.CONNECTING || Global.ws.readyState == WebSocket.OPEN)\r\n    },  \r\n\r\n    swConnect: function(){\r\n        if (Global.ws != null) {\r\n            return\r\n            cc.log(\"readyState: \", Global.ws.readyState)\r\n            if (Global.ws.readyState == WebSocket.CONNECTING || Global.ws.readyState == WebSocket.OPEN) { //已经连上就不必再连\r\n                return\r\n            }\r\n        }\r\n\r\n        cc.log(\"addr: \", Global.wsAddr, Global.ws == null)\r\n        var ws = new WebSocket(Global.wsAddr);\r\n        ws.onopen = function(e) {\r\n            cc.log(\"ws open: \", ws.readyState)\r\n        }\r\n\r\n        ws.onmessage = function(e) {\r\n            /**\r\n             * 消息解析 \r\n             * 0: 消息id\r\n             * 1：消息长度\r\n             * 2：sessionid\r\n             * 3：nodex x坐标正负标记\r\n             * 4：nodex x坐标值\r\n             * 5：nodey y坐标正负标记\r\n             * 6：nodey y坐标值 \r\n             */\r\n            var data = new Uint32Array(e.data)\r\n            var msgid = data[0] \r\n            switch (msgid) {\r\n                case Global.MID_login:\r\n                    cc.log(\"ws message MID_login: \", data[1], data[2], data[3], data[4], data[5], data[6])\r\n                    var key = data[2].toString()\r\n                    Global.PlayerMap.set(key, data[2])\r\n                    break;\r\n                case Global.MID_logout:\r\n                    var key = data[2].toString()\r\n                    cc.log(\"ws message MID_logout, sessionid: \", key)\r\n                    Global.PlayerMap.delete(key)\r\n                    break;\r\n                case Global.MID_move:\r\n                    cc.log(\"ws message MID_move: \", data[1], data[2], data[3], data[4], data[5], data[6])\r\n                    var key = data[2].toString()\r\n                    Global.PlayerMap.set(key, data[2])\r\n                    break;\r\n                default:\r\n                    cc.log(\"未知 消息id: \", msgid)\r\n            }\r\n        }\r\n\r\n        ws.onerror = function (e) {\r\n            cc.log(\"ws error: \", ws.readyState)\r\n            Global.ws = null\r\n        }\r\n\r\n        ws.onclose = function (e) {\r\n            cc.log(\"ws close: \", ws.readyState)\r\n            //Player.sendPlayerPos()\r\n            Global.ws = null\r\n        }\r\n\r\n        cc.log(\"global ws init, state: \", ws.readyState)\r\n        Global.ws = ws\r\n    },\r\n\r\n    /**\r\n     * \r\n     * @param {*} data  具体数据, 1：长度，2：是否广播，3：... 具体消息数据\r\n     */\r\n    sendwsmessage: function(data){\r\n        \r\n        if (Global.ws == null) {\r\n            return\r\n        }\r\n\r\n        if (Global.ws != null) {\r\n            if (Global.ws.readyState == WebSocket.CLOSED || Global.ws.readyState == WebSocket.CLOSING) { //正在断开或者已经断开，则不能发送消息\r\n                return\r\n            }\r\n        }\r\n\r\n        cc.log(\"ws sendwsmessage: \", Global.ws.readyState)\r\n        Global.ws.send(data)\r\n    }\r\n})"]}