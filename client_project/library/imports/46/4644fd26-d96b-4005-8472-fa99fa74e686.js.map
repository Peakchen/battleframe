{"version":3,"sources":["assets\\scripts\\Star.js"],"names":["Battle","require","wsNet","Global","cc","Class","Component","properties","pickRadius","getBattleObj","getwsNetObj","getPlayerDistance","playerPos","game","player","getPosition","dist","node","position","sub","mag","onLoad","updateFrame","onPicked","newStarPos","has","newStarKey","BumpedPlayerId","data","get","nodex","nodey","spawnNewStar","syncStarPos","destroy","Bumped","sendBumpMsg","buff","ArrayBuffer","Uint32Array","MID_Bump","playerX","x","playerXflag","playerY","y","playerYflag","parseInt","starPos","starX","starXflag","starY","starYflag","mySessionId","sendwsmessage","update","dt","frame"],"mappings":"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","sourceRoot":"/","sourcesContent":["let Battle = require(\"battle\")\nlet wsNet = require(\"wsNet\")\nlet Global = require(\"common\")\ncc.Class({\n    extends: cc.Component,\n    \n    properties: {\n        // 星星和主角之间的距离小于这个数值时，就会完成收集\n        pickRadius: 0,\n    },\n\n    getBattleObj: function() {\n        return new Battle();\n    },\n\n    getwsNetObj: function() {\n        return new wsNet();\n    },\n\n    getPlayerDistance: function () {\n        // 根据 player 节点位置判断距离\n        var playerPos = this.game.player.getPosition();\n        // 根据两点位置计算两点之间距离\n        var dist = this.node.position.sub(playerPos).mag();\n        return dist;\n    },\n\n    onLoad: function() {\n        this.updateFrame = 0\n    },\n\n    onPicked: function() {\n        if (Global.newStarPos.has(Global.newStarKey) == false && Global.BumpedPlayerId == null) {\n            return\n        }\n\n        // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\n        var data = Global.newStarPos.get(Global.newStarKey)\n        Global.newStarPos.delete(Global.newStarKey)\n        var nodex = data.nodex\n        var nodey = data.nodey\n        //cc.log(\"update star pos: \", data.nodex, data.nodey)\n        this.game.spawnNewStar(nodex, nodey);\n        Global.syncStarPos = true\n        // 然后销毁当前星星节点\n        this.node.destroy();\n        Global.Bumped = 1\n    },\n\n    /*\n\t撞击响应\n\t请求消息结构：\n\t\t0: 消息ID\n\t\t1：消息长度 8\n\t\t2: 小球x坐标正负标志\n\t\t3: 小球x坐标\n\t\t4：小球y坐标正负标志\n\t\t5：小球y坐标\n\t\t6: 星星x坐标正负标志\n\t\t7: 星星x坐标\n\t\t8：星星y坐标正负标志\n        9：星星y坐标\n    */\n    sendBumpMsg: function(){\n        var buff = new ArrayBuffer(44)\n        var data = new Uint32Array(buff)\n\n        data[0] = Global.MID_Bump //消息ID\n        data[1] = 9 //消息长度\n\n        //小球信息\n        var playerPos = this.game.player.getPosition();\n        var playerX = playerPos.x;\n        var playerXflag = 1\n        if (playerX < 0.0) {\n            playerXflag = 2\n            playerX = 0.0 - playerX\n        }\n\n        var playerY = playerPos.y;\n        var playerYflag = 1\n        if (playerY < 0.0) {\n            playerYflag = 2\n            playerY = 0.0 - playerY\n        }\n\n        data[2] = playerXflag\n        data[3] = parseInt(playerX)\n        data[4] = playerYflag\n        data[5] = parseInt(playerY)\n\n        //星星信息\n        var starPos = this.node.getPosition();\n        var starX = starPos.x;\n        var starXflag = 1\n        if (starX < 0.0) {\n            starXflag = 2\n            starX = 0.0 - starX\n        }\n\n        var starY = starPos.y;\n        var starYflag = 1\n        if (starY < 0.0) {\n            starYflag = 2\n            starY = 0.0 - starY\n        }\n\n        data[6] = starXflag\n        data[7] = parseInt(starX)\n        data[8] = starYflag\n        data[9] = parseInt(starY)\n        data[10] = Global.mySessionId\n        //cc.log(\"send bump star: \", data[2], data[3], data[4], data[5], data[6], data[7], data[8], data[9])\n        this.getwsNetObj().sendwsmessage(data)\n    },\n\n    update: function (dt) {\n        //cc.log(\"star dt: \", this.updateFrame)\n        // 每帧判断和主角之间的距离是否小于收集距离\n\n        if (this.updateFrame >= 1.0 && this.getPlayerDistance() < this.pickRadius) {\n            this.updateFrame = 0\n            // 调用收集行为\n            if (dt <= 1.0) {\n                dt *= 100.0\n            }\n            var frame = parseInt(dt)\n            var dist = parseInt(this.getPlayerDistance())\n            // 发送撞击星星事件\n            //this.getBattleObj().postAttackMsg(frame, dist);\n            //cc.log(\"star info: \", dt, frame, dist)\n            this.sendBumpMsg()\n            return;\n        }\n\n        if (Global.newStarPos.has(Global.newStarKey)){\n            this.onPicked();\n        }\n        \n        this.updateFrame += dt\n        // 根据 Game 脚本中的计时器更新星星的透明度\n        //var opacityRatio = 1 - this.game.timer/this.game.starDuration;\n        //var minOpacity = 50;\n        //this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\n    },\n});\n"]}