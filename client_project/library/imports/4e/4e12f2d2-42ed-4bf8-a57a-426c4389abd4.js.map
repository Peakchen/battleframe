{"version":3,"sources":["assets\\scripts\\Game.js"],"names":["Battle","require","Global","wsNet","PlayerData","cc","Class","Component","properties","starPrefab","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","scoreAudio","AudioClip","getBattleObj","getwsNetObj","onLoad","log","PlayerSessionMap","Map","NewplayerMap","newPlayerIds","Array","DelPlayerIds","postBattleStartMsg","groundY","y","height","timer","starDuration","spawnNewStar","score","x","newStar","instantiate","node","addChild","setPosition","v2","getNewStarPosition","getComponent","game","Math","random","randX","randY","maxX","width","postUpdateStarPosMsg","checkNewPlayer","playeridsLen","length","self","url","needCreate","playerid","pop","has","data","get","child","getChildByName","toString","nodex","nodey","removeChild","loader","loadRes","SpriteFrame","err","spriteFrame","setAutoRelease","position","sprite","addComponent","Sprite","checklogout","logoutlen","testcreateplayer","test","push","playerProp","sessionId","set","update","dt","gainScore","string","gameOver"],"mappings":"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","sourceRoot":"/","sourcesContent":["let Battle = require(\"battle\")\nlet Global = require(\"common\")\nlet wsNet = require(\"wsNet\")\nlet PlayerData = require(\"playerdata\")\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 这个属性引用了星星预制资源\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        // 星星产生后消失时间的随机范围\n        maxStarDuration: 0,\n        minStarDuration: 0,\n        // 地面节点，用于确定星星生成的高度\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\n        player: {\n            default: null,\n            type: cc.Node\n        },\n        // score label 的引用\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        // 得分音效资源\n        scoreAudio: {\n            default: null,\n            type: cc.AudioClip\n        },\n    },\n\n    getBattleObj: function() {\n        return new Battle();\n    },\n\n    getwsNetObj: function() {\n        return new wsNet();\n    },\n\n    onLoad: function () {\n        cc.log(\"game on load init...\")\n        //this.getwsNetObj().sendwsmessage(\"hello\")\n        Global.PlayerSessionMap = new Map();\n        Global.NewplayerMap = new Map();\n        Global.newPlayerIds = new Array();\n        Global.DelPlayerIds = new Array();\n\n        //发起战斗开始请求\n        this.getBattleObj().postBattleStartMsg();\n\n        // 获取地平面的 y 轴坐标\n        this.groundY = this.ground.y + this.ground.height/2;\n        // 初始化计时器\n        this.timer = 0;\n        this.starDuration = 0;\n        // 生成一个新的星星\n        this.spawnNewStar(0.0, 0.0);\n        // 初始化计分\n        this.score = 0;\n    },\n\n    spawnNewStar: function(x, y) {\n        //cc.log(\"new star pos: \", x, y)\n        // 使用给定的模板在场景中生成一个新节点\n        var newStar = cc.instantiate(this.starPrefab);\n        // 将新增的节点添加到 Canvas 节点下面\n        this.node.addChild(newStar);\n        // 为星星设置一个随机位置\n        if (x != 0.0 || y != 0.0 ){\n            //var maxX = this.node.width/2;\n           // var newx = (x - 0.5) * 2 * maxX;\n            newStar.setPosition(cc.v2(x, y));\n        }else{\n            newStar.setPosition(this.getNewStarPosition());\n        }\n        \n        // 在星星组件上暂存 Game 对象的引用\n        newStar.getComponent('Star').game = this;\n        // 重置计时器，根据消失时间范围随机取一个值\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n    },\n\n    getNewStarPosition: function () {\n        var randX = 0;\n        var randY = -100\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\n        //var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50;\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\n        var maxX = this.node.width/2;\n        //cc.log(\"star pos maxX: \", maxX)\n        this.getBattleObj().postUpdateStarPosMsg(maxX)\n        randX = (Math.random() - 0.5) * 2 * maxX;\n        if (randX >= this.node.width/2) {\n            randX = this.node.width/3\n        }\n\n        if (randX <= (0-this.node.width/2)){\n            randX = (0-this.node.width/3)\n        }\n\n        //服务器给的坐标，客户端随便检验看看是否一致\n        // var randN = this.getBattleObj().getRandOne(Global.starPosRandseed)\n        // if (parseInt(randN*10000) != Global.starPosRandN) {\n        //     cc.log(\"invalid rand number: \", randN, Global.starPosRandN)\n        //     return cc.v2(randX, randY); \n        // }\n        //cc.log(\"star randX: \", randX)\n        //randX = (this.getBattleObj().getRandNumber(4)*Math.random() - 2.0) * maxX;\n        // 返回星星坐标\n        \n        return cc.v2(randX, randY);\n    },\n\n    //检查创建新小球\n    checkNewPlayer: function(){\n        var playeridsLen = Global.newPlayerIds.length\n        if (playeridsLen == 0 ) {\n            return\n        }\n\n        //cc.log(\"create purple monsters.\")\n        var self = this;\n        var url = \"PurpleMonster\"\n        var needCreate = false\n        for (;playeridsLen > 0;){\n            var playerid = Global.newPlayerIds.pop() //弹出数据\n            if (Global.NewplayerMap.has(playerid) == false) {\n                cc.log(\"NewplayerMap not find, playerid: \", playerid)\n                break\n            }\n\n            var data = Global.NewplayerMap.get(playerid) //节点数据坐标\n            var child = self.node.getChildByName(playerid.toString())\n            if (child != null){\n                if (child.x != data.nodex || data.nodey != child.y) {   //位置相同就不用频繁刷新了\n                    self.node.removeChild(child)\n                    needCreate = true\n                }\n            }else{\n                needCreate = true\n            }\n\n            if (needCreate) {\n                //创建精灵\n                //cc.log(\"new player pos: \", playerid, data.nodex, data.nodey)\n                cc.loader.loadRes(url, cc.SpriteFrame, function(err, spriteFrame){\n                    cc.loader.setAutoRelease(url, true);\n                    var node = new cc.Node(playerid.toString())\n                    node.position = cc.v2(data.nodex, data.nodey);\n                    const sprite = node.addComponent(cc.Sprite)\n                    sprite.spriteFrame = spriteFrame\n                    self.node.addChild(node, 0, playerid.toString()) //https://blog.csdn.net/zhang431705/article/details/21650727\n                })\n\n                needCreate = false\n            }\n           \n            //剩余长度检查\n            Global.NewplayerMap.delete(playerid) //取出即删除\n            playeridsLen = Global.newPlayerIds.length\n\n            //间隔多久消失\n            // this.scheduleOnce(function(){\n            //     var child = self.node.getChildByName(playerid.toString())\n            //     self.node.removeChild(child)\n            //  },5);\n        }\n    },\n\n    checklogout: function(){\n        var logoutlen = Global.DelPlayerIds.length\n        var self = this;\n        for(;logoutlen > 0;) {\n            cc.log(\"checklogout...\")\n            var playerid = Global.DelPlayerIds.pop()\n            var child = self.node.getChildByName(playerid)\n            if (child != null){\n                self.node.removeChild(child)\n            }\n            logoutlen = Global.DelPlayerIds.length\n        }\n    },\n\n    testcreateplayer: function(){\n        if (Global.test == 1) {\n            return\n        }\n\n        Global.test = 1\n        var playerid = 1122\n        Global.newPlayerIds.push(playerid)\n        var nodex = 100.0\n        var nodey = -88.0\n        var playerProp = {\n            sessionId: playerid,\n            nodex: nodex,\n            nodey: nodey\n        }\n        Global.NewplayerMap.set(playerid, playerProp)\n        //cc.log(\"new player pos: \", playerid, Global.NewplayerMap.has(playerid))\n        this.checkNewPlayer()\n    },\n\n    update: function (dt) {\n        //cc.log(\"game dt: \", dt)\n        // 每帧更新计时器，超过限度还没有生成新的星星\n        // 就会调用游戏失败逻辑\n        //this.testcreateplayer()\n        \n        //检查上线或者移动玩家小球\n        this.checkNewPlayer()\n        //检查下线小球\n        this.checklogout()\n        // if (this.timer > this.starDuration) {\n        //     cc.log(\"game over: \", this.timer, this.starDuration)\n        //     this.gameOver();\n        //     this.enabled = false;   // disable gameOver logic to avoid load scene repeatedly\n        //     return;\n        // }\n\n        this.timer += dt;\n        return\n    },\n\n    gainScore: function () {\n        this.score += 1;\n        // 更新 scoreDisplay Label 的文字\n        this.scoreDisplay.string = 'Score: ' + this.score;\n        // 播放得分音效\n        //cc.audioEngine.playEffect(this.scoreAudio, false);\n    },\n\n    gameOver: function () {\n        //this.player.stopAllActions(); //停止 player 节点的跳跃动作\n        //cc.director.loadScene('game');\n    }\n});\n"]}