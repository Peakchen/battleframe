{"version":3,"sources":["assets\\scripts\\Game.js"],"names":["Battle","require","Global","wsNet","PlayerData","cc","Class","Component","properties","starPrefab","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","scoreAudio","AudioClip","getBattleObj","getwsNetObj","onLoad","PlayerSessionMap","Map","NewplayerMap","newPlayerIds","Array","DelPlayerIds","postBattleStartMsg","groundY","y","height","timer","starDuration","spawnNewStar","score","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","Math","random","randX","randY","maxX","width","postUpdateStarPosMsg","v2","checkNewPlayer","playeridsLen","length","log","self","url","playerid","pop","data","get","child","getChildByName","toString","removeChild","has","nodex","nodey","loader","loadRes","SpriteFrame","err","spriteFrame","setAutoRelease","position","sprite","addComponent","Sprite","checklogout","logoutlen","testcreateplayer","test","push","playerProp","sessionId","set","update","dt","gainScore","string","audioEngine","playEffect","gameOver"],"mappings":"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","sourceRoot":"/","sourcesContent":["let Battle = require(\"battle\")\nlet Global = require(\"common\")\nlet wsNet = require(\"wsNet\")\nlet PlayerData = require(\"playerdata\")\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 这个属性引用了星星预制资源\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        // 星星产生后消失时间的随机范围\n        maxStarDuration: 0,\n        minStarDuration: 0,\n        // 地面节点，用于确定星星生成的高度\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\n        player: {\n            default: null,\n            type: cc.Node\n        },\n        // score label 的引用\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        // 得分音效资源\n        scoreAudio: {\n            default: null,\n            type: cc.AudioClip\n        },\n    },\n\n    getBattleObj: function() {\n        return new Battle();\n    },\n\n    getwsNetObj: function() {\n        return new wsNet();\n    },\n\n    onLoad: function () {\n\n        //this.getwsNetObj().sendwsmessage(\"hello\")\n        Global.PlayerSessionMap = new Map();\n        Global.NewplayerMap = new Map();\n        Global.newPlayerIds = new Array();\n        Global.DelPlayerIds = new Array();\n\n        //发起战斗开始请求\n        this.getBattleObj().postBattleStartMsg();\n\n        // 获取地平面的 y 轴坐标\n        this.groundY = this.ground.y + this.ground.height/2;\n        // 初始化计时器\n        this.timer = 0;\n        this.starDuration = 0;\n        // 生成一个新的星星\n        this.spawnNewStar();\n        // 初始化计分\n        this.score = 0;\n    },\n\n    spawnNewStar: function() {\n        // 使用给定的模板在场景中生成一个新节点\n        var newStar = cc.instantiate(this.starPrefab);\n        // 将新增的节点添加到 Canvas 节点下面\n        this.node.addChild(newStar);\n        // 为星星设置一个随机位置\n        newStar.setPosition(this.getNewStarPosition());\n        // 在星星组件上暂存 Game 对象的引用\n        newStar.getComponent('Star').game = this;\n        // 重置计时器，根据消失时间范围随机取一个值\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n    },\n\n    getNewStarPosition: function () {\n        var randX = 0;\n        var randY = -100\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\n        //var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50;\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\n        var maxX = this.node.width/2;\n        this.getBattleObj().postUpdateStarPosMsg(maxX)\n        randX = (Math.random() - 0.5) * 2 * maxX;\n\n        //服务器给的坐标，客户端随便检验看看是否一致\n        // var randN = this.getBattleObj().getRandOne(Global.starPosRandseed)\n        // if (parseInt(randN*10000) != Global.starPosRandN) {\n        //     cc.log(\"invalid rand number: \", randN, Global.starPosRandN)\n        //     return cc.v2(randX, randY); \n        // }\n\n        randX = (Math.random() - 0.5) * 2 * maxX;\n        //cc.log(\"star randX: \", randX)\n        //randX = (this.getBattleObj().getRandNumber(4)*Math.random() - 2.0) * maxX;\n        // 返回星星坐标\n        \n        return cc.v2(randX, randY);\n    },\n\n    //检查创建新小球\n    checkNewPlayer: function(){\n        var playeridsLen = Global.newPlayerIds.length\n        if (playeridsLen == 0 ) {\n            return\n        }\n\n        cc.log(\"create purple monsters.\")\n        var self = this;\n        var url = \"PurpleMonster\"\n        for (;playeridsLen > 0;){\n            var playerid = Global.newPlayerIds.pop() //弹出数据\n            var data = Global.NewplayerMap.get(playerid) //节点数据坐标\n            var child = self.node.getChildByName(playerid.toString())\n            if (child != null){\n                self.node.removeChild(child)\n            }\n\n            //创建精灵\n            cc.log(\"new player pos: \", playerid, Global.NewplayerMap.has(playerid), data.nodex, data.nodey)\n            cc.loader.loadRes(url, cc.SpriteFrame, function(err, spriteFrame){\n                cc.loader.setAutoRelease(url, true);\n                var node = new cc.Node(playerid.toString())\n                node.position = cc.v2(data.nodex, data.nodey);\n                const sprite = node.addComponent(cc.Sprite)\n                sprite.spriteFrame = spriteFrame\n                self.node.addChild(node, 0, playerid.toString()) //https://blog.csdn.net/zhang431705/article/details/21650727\n            })\n\n            //剩余长度检查\n            Global.NewplayerMap.delete(playerid) //取出即删除\n            playeridsLen = Global.newPlayerIds.length\n\n            //间隔多久消失\n            // this.scheduleOnce(function(){\n            //     var child = self.node.getChildByName(playerid.toString())\n            //     self.node.removeChild(child)\n            //  },5);\n        }\n    },\n\n    checklogout: function(){\n        var logoutlen = Global.DelPlayerIds.length\n        var self = this;\n        for(;logoutlen > 0;) {\n            var playerid = Global.DelPlayerIds.pop()\n            var child = self.node.getChildByName(playerid)\n            if (child != null){\n                self.node.removeChild(child)\n            }\n            logoutlen = Global.DelPlayerIds.length\n        }\n    },\n\n    testcreateplayer: function(){\n        if (Global.test == 1) {\n            return\n        }\n\n        Global.test = 1\n        var playerid = 1122\n        Global.newPlayerIds.push(playerid)\n        var nodex = 100.0\n        var nodey = -88.0\n        var playerProp = {\n            sessionId: playerid,\n            nodex: nodex,\n            nodey: nodey\n        }\n        Global.NewplayerMap.set(playerid, playerProp)\n        //cc.log(\"new player pos: \", playerid, Global.NewplayerMap.has(playerid))\n        this.checkNewPlayer()\n    },\n\n    update: function (dt) {\n        //cc.log(\"game dt: \", dt)\n        // 每帧更新计时器，超过限度还没有生成新的星星\n        // 就会调用游戏失败逻辑\n        //this.testcreateplayer()\n        \n        //检查上线或者移动玩家小球\n        this.checkNewPlayer()\n        //检查下线小球\n        this.checklogout()\n        // if (this.timer > this.starDuration) {\n        //     cc.log(\"game over: \", this.timer, this.starDuration)\n        //     this.gameOver();\n        //     this.enabled = false;   // disable gameOver logic to avoid load scene repeatedly\n        //     return;\n        // }\n\n        this.timer += dt;\n        return\n    },\n\n    gainScore: function () {\n        this.score += 1;\n        // 更新 scoreDisplay Label 的文字\n        this.scoreDisplay.string = 'Score: ' + this.score;\n        // 播放得分音效\n        cc.audioEngine.playEffect(this.scoreAudio, false);\n    },\n\n    gameOver: function () {\n        //this.player.stopAllActions(); //停止 player 节点的跳跃动作\n        //cc.director.loadScene('game');\n    }\n});\n"]}