{"version":3,"sources":["assets\\scripts\\Player.js"],"names":["Global","require","wsNet","GM","cc","Class","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","type","AudioClip","accDirection","getwsNetObj","getGMObj","setJumpAction","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","onKeyDown","event","keyCode","macro","KEY","a","accLeft","d","accRight","onKeyUp","onLoad","game","setFrameRate","FirstLogin","newStarPos","Map","xSpeed","TickFrame","systemEvent","on","SystemEvent","EventType","KEY_DOWN","KEY_UP","CanSendMsg","scheduleOnce","node","x","MosterPosX","y","MosterPosY","sendPlayerPos","MID_SyncPos","onDestroy","off","randPlayerPos","width","stop","msgid","mySessionId","buff","ArrayBuffer","data","Uint32Array","nodexflag","nodex","parseInt","nodeyflag","nodey","sendwsmessage","update","dt","Math","abs","Bumped","MID_move"],"mappings":"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","sourceRoot":"/","sourcesContent":["let Global = require(\"common\")\nlet wsNet = require(\"wsNet\")\nlet GM = require(\"gm\")\n\ncc.Class({\n    extends: cc.Component,\n    \n    properties: {\n        // 主角跳跃高度\n        jumpHeight: 0,\n        // 主角跳跃持续时间\n        jumpDuration: 0,\n        // 最大移动速度\n        maxMoveSpeed: 0,\n        // 加速度\n        accel: 0,\n        // 跳跃音效资源\n        jumpAudio: {\n            default: null,\n            type: cc.AudioClip\n        },\n        //\n        accDirection: 0,\n    },\n\n    getwsNetObj: function() {\n        return new wsNet();\n    },\n\n    getGMObj: function() {\n        return new GM();\n    },\n\n    setJumpAction: function () {\n        // 跳跃上升\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\n        // 下落\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\n        // 添加一个回调函数，用于在动作结束时调用我们定义的其他方法\n        var callback = cc.callFunc(this.playJumpSound, this);\n        // 不断重复，而且每次完成落地动作后调用回调来播放声音\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\n    },\n\n    playJumpSound: function () {\n        // 调用声音引擎播放声音\n        cc.audioEngine.playEffect(this.jumpAudio, false);\n    },\n\n    onKeyDown (event) {\n        // set a flag when key pressed\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.accLeft = true;\n                break;\n            case cc.macro.KEY.d:\n                this.accRight = true;\n                break;\n        }\n    },\n\n    onKeyUp (event) {\n        // unset a flag when key released\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.accLeft = false;\n                break;\n            case cc.macro.KEY.d:\n                this.accRight = false;\n                break;\n        }\n    },\n\n    onLoad: function() {\n        cc.game.setFrameRate(10);\n        \n        Global.FirstLogin = null\n        Global.newStarPos = new Map();\n\n        // 初始化跳跃动作\n        //this.jumpAction = this.setJumpAction();\n        //this.node.runAction(this.jumpAction);\n        // 加速度方向开关\n        this.accLeft = false;\n        this.accRight = false;\n\n        // 主角当前水平方向速度\n        this.xSpeed = 0\n        //this.xSpeed = (Math.random() - 0.5) * 2 * 10;\n        this.TickFrame = 0;\n        // 初始化键盘输入监听\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);  \n        \n        //初始化小球位置\n        //this.randPlayerPos()\n        //发送初始位置\n        if (this.getwsNetObj().CanSendMsg()){\n            this.scheduleOnce(function(){\n                this.node.x = Global.MosterPosX\n                this.node.y = Global.MosterPosY\n                this.sendPlayerPos(Global.MID_SyncPos)\n            }, 1)\n        }   \n    },\n\n    onDestroy () {\n        // 取消键盘输入监听\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },    \n\n    //初始化随机小球所在位置，然后广播给其他人\n    randPlayerPos: function() {\n        this.node.x = this.xSpeed * (this.node.width/2)\n        this.xSpeed = 0\n        //cc.log(\"randPlayerPos player pos: \", this.node.x, this.node.y)\n    },\n\n    stop: function(){\n        this.xSpeed = 0\n    },\n\n    sendPlayerPos: function(msgid) {\n        //cc.log(\"send player pos: \", msgid, this.TickFrame, this.node.x, this.node.y)\n\n        if (Global.mySessionId == null) {\n            return\n        }\n\n        var buff = new ArrayBuffer(28)\n        var data = new Uint32Array(buff)\n\n        data[0] = msgid //消息ID\n        data[1] = 5 //消息长度\n\n        var nodexflag = 1\n        var nodex = this.node.x\n        if (nodex < 0.0) {\n            nodexflag = 2\n            nodex = 0.0 - nodex\n        }\n\n        data[2] = nodexflag     //x坐标正负\n        data[3] = parseInt(nodex) //x坐标\n        var nodeyflag = 1\n        var nodey = this.node.y  //-88\n        if (nodey < 0.0) {\n            nodeyflag = 2\n            nodey = 0.0 - nodey\n        }\n\n        data[4] = nodeyflag    //y坐标正负\n        data[5] = parseInt(nodey) //y坐标\n        data[6] = Global.mySessionId\n\n        this.getwsNetObj().sendwsmessage(data)\n    },\n\n    update: function (dt) {\n        //cc.log(\"player dt: \", this.node.x, this.node.y)\n        //方向移动操作后没任何方向操作时，则慢慢减速直至停止\n        if (this.accLeft == false && this.accRight == false) {\n            this.xSpeed -= 0.1\n            if (this.xSpeed < 0 ) {\n                this.xSpeed = 0\n            }\n        }\n\n        // 根据当前加速度方向每帧更新速度\n        if (this.accLeft) {\n            this.xSpeed -= this.accel * dt;\n        } else if (this.accRight) {\n            this.xSpeed += this.accel * dt;\n        }\n        // 限制主角的速度不能超过最大值\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\n            // if speed reach limit, use max speed with current direction\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\n        }\n\n        // 根据当前速度更新主角的位置\n        /**\n         * 超过边界则自动滚回场景内\n         */\n        if (this.node.x <= -595.0) {\n            //this.xSpeed += this.accel * dt;\n            this.xSpeed = 0\n            this.node.x = -595.0 + 20\n        }else if (this.node.x >= 595.0) {\n            //this.xSpeed -= this.accel * dt;\n            this.node.x = 595.0 - 20\n            this.xSpeed = 0\n        }else{\n            this.node.x += this.xSpeed * dt;\n        }\n\n        if (Global.Bumped == 1){\n            //this.xSpeed = 0\n            Global.Bumped = null\n            //移动广播所在位置，然后获取其他小球所在位置然后进行展示\n            this.sendPlayerPos(Global.MID_move)\n        }\n\n        this.TickFrame += dt\n        if (this.TickFrame > 10.0 ){\n            //更新帧数据\n            this.sendPlayerPos(Global.MID_move)\n            this.TickFrame = 0\n        }\n        //cc.log(\"player pos: \", this.node.x, this.node.y)\n    },\n});\n\n\n"]}