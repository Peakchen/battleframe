{"version":3,"sources":["assets\\scripts\\wsNet.js"],"names":["Global","require","cc","Class","CanSendMsg","ws","readyState","WebSocket","CONNECTING","OPEN","newPlayer","arrData","newplayerCreated","newplayerPosx","newplayerPosy","swConnect","log","wsAddr","onopen","e","onmessage","data","Uint32Array","msgid","MID_login","key","toString","nodex","nodey","playerProp","sessionId","PlayerSessionMap","has","set","NewplayerMap","newPlayerIds","push","MID_logout","DelPlayerIds","MID_move","length","onerror","onclose","sendwsmessage","CLOSED","CLOSING","send"],"mappings":"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","sourceRoot":"/","sourcesContent":["/**\r\n * websocket \r\n */\r\n\r\nlet Global = require(\"common\")\r\n//let Player = require(\"Player\")\r\n\r\ncc.Class({\r\n    //extends: cc.Component,\r\n\r\n    /*\r\n    readyState:\r\n        CONNECTING 0\r\n        OPEN       1\r\n        CLOSING    2\r\n        CLOSED     3\r\n    */\r\n   \r\n    CanSendMsg: function(){\r\n        if (Global.ws == null){\r\n            return false\r\n        }\r\n\r\n        return (Global.ws.readyState == WebSocket.CONNECTING || Global.ws.readyState == WebSocket.OPEN)\r\n    },  \r\n\r\n    newPlayer: function(arrData){\r\n        Global.newplayerCreated = 1\r\n        Global.newplayerPosx = arrData[4]\r\n        if (arrData[3] == 2) {\r\n            Global.newplayerPosx = 0 - Global.newplayerPosx\r\n        }\r\n        Global.newplayerPosy = arrData[6]\r\n        if (arrData[5] == 2) {\r\n            Global.newplayerPosy = 0 - Global.newplayerPosy\r\n        }\r\n    },\r\n\r\n    swConnect: function(){\r\n        if (Global.ws != null) {\r\n            return\r\n            cc.log(\"readyState: \", Global.ws.readyState)\r\n            if (Global.ws.readyState == WebSocket.CONNECTING || Global.ws.readyState == WebSocket.OPEN) { //已经连上就不必再连\r\n                return\r\n            }\r\n        }\r\n\r\n        cc.log(\"addr: \", Global.wsAddr, Global.ws == null)\r\n        var ws = new WebSocket(Global.wsAddr);\r\n        ws.onopen = function(e) {\r\n            cc.log(\"ws open: \", ws.readyState)\r\n        }\r\n\r\n        ws.onmessage = function(e) {\r\n            /**\r\n             * 消息解析 \r\n             * 0: 消息id\r\n             * 1：消息长度\r\n             * 2：sessionid\r\n             * 3：nodex x坐标正负标记\r\n             * 4：nodex x坐标值\r\n             * 5：nodey y坐标正负标记\r\n             * 6：nodey y坐标值 \r\n             */\r\n            var data = new Uint32Array(e.data)\r\n            var msgid = data[0] \r\n            switch (msgid) {\r\n                case Global.MID_login:\r\n                    cc.log(\"ws message MID_login: \", data[1], data[2], data[3], data[4], data[5], data[6])\r\n                    var key = data[2].toString()\r\n                    var nodex = data[4]\r\n                    var nodey = data[6]\r\n                    if (data[3] == 2){\r\n                        nodex = 0 - nodex\r\n                    }\r\n                    if (data[5] == 2){\r\n                        nodey = 0 - nodey\r\n                    }\r\n                    var playerProp = {\r\n                        sessionId: data[2],\r\n                        nodex: nodex,\r\n                        nodey: nodey\r\n                    }\r\n                    if (Global.PlayerSessionMap.has(key) == false) {\r\n                        Global.PlayerSessionMap.set(key, playerProp)\r\n                    }\r\n                    Global.NewplayerMap.set(key, playerProp)\r\n                    Global.newPlayerIds.push(key)\r\n                    break;\r\n                case Global.MID_logout:\r\n                    var key = data[2].toString()\r\n                    cc.log(\"ws message MID_logout, sessionid: \", key)\r\n                    Global.DelPlayerIds.push(key)\r\n                    Global.PlayerSessionMap.delete(key)\r\n                    break;\r\n                case Global.MID_move:\r\n                    cc.log(\"ws message MID_move: \", data[1], data[2], data[3], data[4], data[5], data[6])\r\n                    var key = data[2].toString()\r\n                    var nodex = data[4]\r\n                    var nodey = data[6]\r\n                    if (data[3] == 2){\r\n                        nodex = 0 - nodex\r\n                    }\r\n                    if (data[5] == 2){\r\n                        nodey = 0 - nodey\r\n                    }\r\n                    var playerProp = {\r\n                        sessionId: data[2],\r\n                        nodex: nodex,\r\n                        nodey: nodey\r\n                    }\r\n                    if (Global.PlayerSessionMap.has(key) == false) {\r\n                        Global.PlayerSessionMap.set(key, playerProp)\r\n                    }\r\n                    Global.NewplayerMap.set(key, playerProp)\r\n                    Global.newPlayerIds.push(key)\r\n                    cc.log(\"MID_move purple monsters: \", Global.newPlayerIds.length)\r\n                    break;\r\n                default:\r\n                    cc.log(\"未知 消息id: \", msgid)\r\n            }\r\n        }\r\n\r\n        ws.onerror = function (e) {\r\n            cc.log(\"ws error: \", ws.readyState)\r\n            Global.ws = null\r\n        }\r\n\r\n        ws.onclose = function (e) {\r\n            cc.log(\"ws close: \", ws.readyState)\r\n            //Player.sendPlayerPos()\r\n            Global.ws = null\r\n        }\r\n\r\n        cc.log(\"global ws init, state: \", ws.readyState)\r\n        Global.ws = ws\r\n    },\r\n\r\n    /**\r\n     * \r\n     * @param {*} data  具体数据, 1：长度，2：是否广播，3：... 具体消息数据\r\n     */\r\n    sendwsmessage: function(data){\r\n        \r\n        if (Global.ws == null) {\r\n            return\r\n        }\r\n\r\n        if (Global.ws != null) {\r\n            if (Global.ws.readyState == WebSocket.CLOSED || Global.ws.readyState == WebSocket.CLOSING) { //正在断开或者已经断开，则不能发送消息\r\n                return\r\n            }\r\n        }\r\n\r\n        cc.log(\"ws sendwsmessage: \", Global.ws.readyState)\r\n        Global.ws.send(data)\r\n    }\r\n})"]}