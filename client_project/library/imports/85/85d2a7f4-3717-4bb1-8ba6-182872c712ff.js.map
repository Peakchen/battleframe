{"version":3,"sources":["assets\\scripts\\login.js"],"names":["Game","require","Global","wsNet","cc","Class","Component","properties","registerBtn","type","Button","loginBtn","nameBox","EditBox","pwdBox","tip_info","Label","getGameObj","getwsNetObj","onLoad","log","swConnect","PlayerSessionMap","Map","NewplayerMap","newPlayerIds","Array","DelPlayerIds","interactable","node","on","onRegister","onLogin","onName","onPwd","Eventobj","CanSendMsg","sendAccountMessage","MID_Register","FirstLogin","DoRegisterAction","MID_login","DoLoginAction","id","buffer","ArrayBuffer","msg","Uint32Array","parseInt","AccountName","AccountPwd","sendwsmessage","string","checkInputContent","change2GameMain","director","loadScene","checkRegisterActionResult","RegisterSucc","checkLoginActionResult","scheduleOnce","LoginSucc","mySessionId","containDigital","str","reg","RegExp","test","disableShow","maxDigital","update","dt"],"mappings":"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","sourceRoot":"/","sourcesContent":["let Game = require(\"Game\")\r\nlet Global = require(\"common\")\r\nlet wsNet = require(\"wsNet\")\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        //注册\r\n        registerBtn: {\r\n            default: null,\r\n            type: cc.Button\r\n        },\r\n\r\n        //登陆\r\n        loginBtn: {\r\n            default: null,\r\n            type: cc.Button\r\n        },\r\n\r\n        //用户名\r\n        nameBox: {\r\n            default: null,\r\n            type: cc.EditBox\r\n        },\r\n\r\n        //密码\r\n        pwdBox: {\r\n            default: null,\r\n            type: cc.EditBox\r\n        },\r\n\r\n        //提示信息显示\r\n        tip_info: {\r\n            default: null,\r\n            type: cc.Label\r\n        }\r\n    },\r\n\r\n    getGameObj: function(){\r\n        return new Game();\r\n    },  \r\n\r\n    getwsNetObj: function() {\r\n        return new wsNet();\r\n    },\r\n\r\n    onLoad: function() {\r\n        cc.log(\"login init...\")\r\n\r\n        this.getwsNetObj().swConnect()\r\n\r\n        Global.PlayerSessionMap = new Map();\r\n        Global.NewplayerMap = new Map();\r\n        Global.newPlayerIds = new Array();\r\n        Global.DelPlayerIds = new Array();\r\n\r\n        this.registerBtn.interactable = false\r\n        this.loginBtn.interactable = false\r\n\r\n        this.registerBtn.node.on(\"click\", this.onRegister, this);\r\n        this.loginBtn.node.on(\"click\", this.onLogin, this);\r\n\r\n        this.nameBox.node.on(\"text-changed\", this.onName, this);\r\n        this.pwdBox.node.on(\"text-changed\", this.onPwd, this);\r\n    },\r\n\r\n    // Eventobj.detail 获得组件对象\r\n    onRegister: function(Eventobj){\r\n        cc.log(\"click register...\")\r\n        if (this.getwsNetObj().CanSendMsg()){\r\n            this.sendAccountMessage(Global.MID_Register)\r\n            if (Global.FirstLogin == null )\r\n                Global.FirstLogin = 1\r\n            Global.DoRegisterAction = 1\r\n        }\r\n    },\r\n\r\n    onLogin: function(Eventobj){\r\n        cc.log(\"click login...\")\r\n        if (this.getwsNetObj().CanSendMsg()){\r\n            this.sendAccountMessage(Global.MID_login)\r\n            Global.DoLoginAction = 1\r\n            if (Global.FirstLogin == null )\r\n                Global.FirstLogin = 1\r\n        }\r\n    },\r\n\r\n    sendAccountMessage: function(id){\r\n        var buffer = new ArrayBuffer(16);\r\n        var msg = new Uint32Array(buffer);\r\n        msg[0] = id\r\n        msg[1] = 2\r\n        msg[2] = parseInt(Global.AccountName)\r\n        msg[3] = parseInt(Global.AccountPwd)\r\n        this.getwsNetObj().sendwsmessage(msg)\r\n    },\r\n\r\n    onName: function(Eventobj){\r\n        cc.log(\"edit name: \", Eventobj.string)\r\n        Global.AccountName = Eventobj.string\r\n        this.checkInputContent()\r\n    },\r\n\r\n    onPwd: function(Eventobj){\r\n        cc.log(\"edit pwd: \", Eventobj.string)\r\n        Global.AccountPwd = Eventobj.string\r\n        this.checkInputContent()\r\n    },\r\n\r\n    //切换到主场景\r\n    change2GameMain: function () {\r\n        cc.director.loadScene('game');\r\n    },\r\n\r\n    //检查注册结果\r\n    checkRegisterActionResult: function(){\r\n        if (Global.DoRegisterAction == 1) {\r\n            cc.log(\"RegisterSucc: \", Global.RegisterSucc)\r\n            if (Global.RegisterSucc == 0 ) {\r\n                this.tip_info.string = \"用户名和密码重复或者错误\"\r\n            }else{\r\n                this.tip_info.string = \"注册成功\"\r\n            }\r\n            Global.DoRegisterAction = 0\r\n        }\r\n    },\r\n\r\n    //检查登陆结果\r\n    checkLoginActionResult: function(){\r\n        if (Global.DoLoginAction == 1) {\r\n            //等到回复消息正常取值\r\n            this.scheduleOnce(function(){\r\n                cc.log(\"LoginSucc: \", Global.LoginSucc)\r\n                if (Global.LoginSucc == 0 ) {\r\n                    this.tip_info.string = \"用户名和密码重复或者错误\"\r\n                }else{\r\n                    this.tip_info.string = \"登陆成功\"\r\n                    cc.log(\"玩家登陆成功, id：\", Global.mySessionId)\r\n                    // 切换场景\r\n                    this.change2GameMain()\r\n                }\r\n                Global.DoLoginAction = 0\r\n             },1);\r\n        }\r\n    },\r\n\r\n    //是否都是数字\r\n    containDigital: function(str){\r\n        var reg = new RegExp(\"^[0-9]*$\")\r\n        return reg.test(str)\r\n    },\r\n\r\n    //检查输入框内容是否可用\r\n    checkInputContent: function(){\r\n        // if (Global.DoRegisterAction == 0 || Global.DoLoginAction == 0 ){\r\n        //     return\r\n        // }\r\n\r\n        var disableShow = true\r\n        if (Global.AccountName == \"\" || Global.AccountPwd == \"\") {\r\n            this.tip_info.string = \"用户名或者密码不能为空！！！\"\r\n        }else if (this.containDigital(Global.AccountName) == false && this.containDigital(Global.AccountPwd) == false) {\r\n            this.tip_info.string = \"用户名或者密码不为数字！！！\"\r\n        }else if ((parseInt(Global.AccountName) > Global.maxDigital) || (parseInt(Global.AccountPwd) > Global.maxDigital)) {\r\n            this.tip_info.string = \"用户名或者密码长度超了！！！\"\r\n        }else{\r\n            disableShow = false\r\n        }\r\n\r\n        if (!disableShow) {\r\n            this.registerBtn.interactable = true\r\n            this.loginBtn.interactable = true\r\n        }\r\n    },\r\n\r\n    update: function (dt) {\r\n        //cc.log(\"login update...\")\r\n        this.checkRegisterActionResult()\r\n        this.checkLoginActionResult()\r\n    }\r\n})"]}